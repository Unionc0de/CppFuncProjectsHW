#include <iostream>
#define random(min,max) (min + rand() % (max - min + 1))
using namespace std;
const int SIZE = 3;

void fillDoubArr(int** arr) {//#6
    int size1 = _msize(arr) / sizeof(arr[0]);
    int size2 = _msize(arr[0]) / sizeof(arr[0][0]);
    for (int i = 0; i < size1; i++) { 
        for (int j = 0; j < size2; j++) {
            arr[i][j] = random(1, 3);
        }
    }
}

void showDoubArr(int** arr) {
    int size1 = _msize(arr) / sizeof(arr[0]);
    for (int i = 0; i < size1; i++) {
        int size2 = _msize(arr[i]) / sizeof(arr[i][0]);
        for (int j = 0; j < size2; j++) {
            cout << arr[i][j] << " ";
        }
        cout << endl;
    }
}

void showArray(int* arr) {
    int size = _msize(arr) / sizeof(arr[0]);
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
}

void copyArray(int**& arr, int**& arr2) {//#7
    int size1 = _msize(arr) / sizeof(arr[0]);
    int size2 = _msize(arr[0]) / sizeof(arr[0][0]);

    for (int i = 0; i < size2; i++)
    {
        arr2[i] = new int[size2];
    }

    for (int i = 0; i < size1; i++)
    {
        for (int j = 0; j < size2; j++)
        {
            arr2[i][j] = arr[i][j];
        }
    }
}

void deleteElementDynArr(int*& arr, int index) {
    int size1 = _msize(arr) / sizeof(arr[0]);
    int* buf = new int[size1 - 1];
    
    for (int i = 0; i < index; i++) {
        buf[i] = arr[i];
    }

    for (int i = index+1; i < size1; i++)
    {
        buf[i-1] = arr[i];
    }

    delete[] arr;
    arr = buf;
}

void addArrayToDoubleArray(int**& arr1, int*& arr2,int index) {//#9 
    int size1 = _msize(arr1) / sizeof(arr1[0]);
    int size2 = _msize(arr1[0]) / sizeof(arr1[0][0]);
    int size3 = _msize(arr2) / sizeof(arr2[0]);
    
    int** buf = new int*[size1 + 1];

    int* addArrayCopy = new int[size3];
    for (int i = 0; i < size3; i++) {
        addArrayCopy[i] = arr2[i];
    }

    for (int i = 0; i < index; i++) {
        buf[i] = arr1[i];
    }
    
    buf[index] = addArrayCopy;

    for (int i = index; i < size1; i++)
    {
        buf[i + 1] = arr1[i];
    }

    delete[] arr1;
    arr1 = buf;
}

void deleteMinStrArray(int**& arr) {
    int size1 = _msize(arr) / sizeof(arr[0]);
    int size2 = _msize(arr[0]) / sizeof(arr[0][0]);

    int** buf = new int* [size1 - 1];
}

int countOfSym(const char* str) {//#13
    int cnt = 0;

    while (str[cnt] != '\0') {
        cnt++;
    }

    return cnt;
}

int main()
{
    setlocale(LC_ALL, "rus");
    srand(time(NULL));

    //float num1, num2, num3, num4;//#1
    //float avg;

    //cin >> num1 >> num2 >> num3 >> num4;
    //avg = float((num1 + num2 + num3 + num4) / 4);
    //cout << "Avg" << avg << endl;

    //for (int i = 2; i <= 40; i+=2)//#2
    //{
    //    cout << i << endl;
    //}

    //int size;

    //cin >> size;
    //
    //for (int i = 0; i <= size; i++) {//#3
    //    cout << " " << endl;
    //    for (int j = 0; j < i; j++)
    //    {
    //        cout << '*' ;
    //    }
    //}

    //int num; //#4 
    //int count = 0;
    //cin >> num;
    //while (num != 0)
    //{
    //    num = num / 10;
    //    count++;
    //}

    //cout << "count of razryraddd: " << count;

    /*int arr[SIZE];//#5
    int min, max;
    cin >> min >> max;
    
    if (min > max) {
        swap(min, max);
    }

    for (int i = 0; i < SIZE; i++)
    {
        arr[i] = random(min, max);
        cout << arr[i] << " ";
    }*/

    //int** arr = new int* [SIZE];//#6 
    //for (int i = 0; i < SIZE; i++)
    //{
    //    arr[i] = new int[SIZE];
    //}
    //
    //fillDoubArr(arr);
    //showDoubArr(arr);

    //int max = arr[0][0];
    //int indexOfMax = 0;

    //for (int i = 0; i < SIZE; i++)
    //{
    //    int rowSum = 0;
    //    for (int j = 0; j < SIZE; j++)
    //    {
    //        rowSum += arr[i][j];
    //    }

    //    if (rowSum > max)
    //    {
    //        max = rowSum;
    //        indexOfMax = i;
    //    }
    //}

    //cout << indexOfMax << endl;


    //int** arr = new int* [SIZE];//#7
    //for (int i = 0; i < SIZE; i++)
    //{
    //    arr[i] = new int[SIZE];
    //}
    //
    //fillDoubArr(arr);
    //
    //int** arr2 = new int* [SIZE];
    //copyArray(arr, arr2);
    //showDoubArr(arr);
    //cout << endl;
    //showDoubArr(arr2);

    //int* arr = new int[SIZE];//#8
    //for (int i = 0; i < SIZE ; i++)
    //{
    //    arr[i] = random(1, 9);
    //}
    //showArray(arr);
    //deleteElementDynArr(arr, 0);
    //cout << endl;
    //showArray(arr);

    //int** arr = new int* [SIZE];//#9 
    //for (int i = 0; i < SIZE; i++)
    //{
    //    arr[i] = new int[SIZE];
    //}
    //fillDoubArr(arr);

    //int* arr2 = new int[SIZE];
    //for (int i = 0; i < SIZE ; i++)
    //{
    //    arr2[i] = random(1, 9);
    //}

    //showDoubArr(arr);
    //addArrayToDoubleArray(arr, arr2,1);
    //cout << endl;
    //showDoubArr(arr);

    //int** arr = new int* [SIZE];//#10 
    //for (int i = 0; i < SIZE; i++)
    //{
    //    arr[i] = new int[SIZE];
    //}
    //fillDoubArr(arr);

    const char* str = "PRIVET KRASOTA";//#13
    cout << str << endl;
    cout << countOfSym(str);
    
}
